---
// Import required assets

import FacebookIcon from "@/assets/icons/facebook.svg";
import LinkedinIcon from "@/assets/icons/linkedin.svg";

// Import required components
import { type CollectionEntry, getCollection } from "astro:content";
import BlogLayout from "@/layouts/blog-layout.astro";
import { Image } from "astro:assets";
import FormattedDate from "@/components/formatted-date.astro";
import Tag from "@/components/ui/tag.astro";
import PostCard from "@/components/cards/post-card.astro";
import CalloutsClasses from "@/components/callouts-classes.astro";
import ButtonLink from "@/components/ui/button-link.astro";
import { proseClasses } from "@/lib/prose-classes";
import { Facebook, Linkedin } from "lucide-react";
import { TwitterIcon } from "@/components/header/icons";

type BlogPost = CollectionEntry<"Blog">;

//  This async function, getStaticPaths, fetches data from a "blog" collection. It then generates paths with "slug" parameters for pre-rendered pages. These paths are essential for routing in Astro, facilitating the creation of dynamic routes for blog posts.
export async function getStaticPaths() {
  const posts = await getCollection("Blog");

  const tags: string[] = [];

  posts.forEach((post) => {
    // Loop through the tags in each blog post
    post.data.tags.forEach((tag) => {
      // Capitalize the first letter of the tag
      const lowerCasedTag = tag.toLowerCase();
      // Check if the tag is not already in the allTags array
      if (!tags.includes(lowerCasedTag)) {
        // Add the tag to the allTags array
        tags.push(lowerCasedTag);
      }
    });
  });

  return posts.map((post) => {
    const serchTag = post.data.tags[0].toLowerCase();

    // Get related articles for specified tag
    const relatedArticles = posts
      .filter((post) =>
        post.data.tags.some((tag: string) => tag.toLowerCase() === serchTag),
      )
      .filter((post) => {
        // Filter out posts with archive set to true
        return post.data.archive !== true;
      });

    return {
      params: { slug: post.slug },
      props: {
        post: post,
        tags: tags,
        relatedArticles: relatedArticles,
      },
    };
  });
}

const { post, tags, relatedArticles } = Astro.props;

const { Content } = await post.render();
---

<BlogLayout
  title={post.data.metaTitle ? post.data.metaTitle : post.data.title}
  description={post.data.metaDescription
    ? post.data.metaDescription
    : post.data.description}
  tags={tags}
  relatedArticles={relatedArticles}
>
  <!-- Blog frontmatter  -->
  <div class="container grid grid-cols-12 md:gap-x-10 lg:gap-x-16">
    <div class="col-span-12 md:col-span-9">
      <div class="mt-4 hidden items-center gap-x-4 md:mt-0 md:flex">
        <p class="text-xs font-medium leading-none text-cardGray md:text-base">
          by {`${post.data.contributors[0]}`}
        </p>
        <a
          class="inline-flex items-center rounded-full bg-badgeColor px-3 py-1.5 text-xs font-medium text-iconText"
        >
          {
            post.data.tags[0].charAt(0).toUpperCase() +
              post.data.tags[0].slice(1)
          }
        </a>
      </div>

      <p
        class="mt-6 inline-flex items-center text-xs font-medium text-para md:mt-4 md:hidden md:text-base"
      >
        5 Min Read
        <span class="mx-2 block h-1 w-1 rounded-full bg-para"></span>
        <span class="text-xs text-para md:text-base">
          <FormattedDate date={post.data.pubDate} />
        </span>
      </p>

      <h1
        class="mt-4 text-2xl font-bold md:mt-[18px] md:text-2lg md:leading-10 lg:text-3lg lg:leading-[48px]"
      >
        {post.data.title}
      </h1>

      <p
        class="mt-6 hidden items-center text-xs font-medium text-para md:mt-4 md:inline-flex md:text-base"
      >
        5 Min Read
        <span class="mx-2 block h-1 w-1 rounded-full bg-para"></span>
        <span class="text-xs text-para md:text-base">
          <FormattedDate date={post.data.pubDate} />
        </span>
      </p>

      <div class="mt-4 flex items-center gap-x-4 md:mt-0 md:hidden">
        <p
          class="text-xs font-medium leading-none text-cardGray md:block md:text-base"
        >
          by {`${post.data.contributors[0]}`}
        </p>

        <p
          class="inline-flex items-center rounded-full bg-badgeColor px-3 py-1.5 text-xs font-medium text-iconText"
        >
          Insight
        </p>
      </div>
    </div>
  </div>

  <!-- Blog Content and grid -->
  <div class="container mt-4 grid grid-cols-12 md:gap-x-10 lg:gap-x-16">
    <article class="col-span-12 md:col-span-9">
      <div>
        <Image
          src={post.data.bannerImage}
          alt={`banner image for the post ${post.data.title}`}
          width={1200}
          height={1200}
          format="webp"
          class="inset-0 aspect-video max-h-[490px] bg-gray-200 object-cover"
          loading="lazy"
          quality="max"
        />
      </div>

      <article class={proseClasses}>
        <Content />
      </article>

      <div class="mt-10 flex">
        <ButtonLink
          link={`https://github.com/HoomanHQ/Akash_Network/tree/main/src/content/Blog/${post.slug}/index.md`}
          variant="secondary"
          size="xl"
        >
          Update Post
        </ButtonLink>
      </div>
    </article>

    <aside
      class="sticky top-28 col-span-3 hidden h-screen space-y-[56px] md:block"
    >
      <div>
        <p class="font-bold leading-none text-foreground">Explore Topics</p>

        <div class="mt-6 flex flex-wrap gap-2">
          {
            tags
              .sort(() => Math.random() - 0.5)
              .map((tag: string) => (
                <a
                  class="inline-flex items-center rounded-full bg-badgeColor  px-3 py-1.5 text-xs font-medium text-iconText"
                  href={`/blog/${tag.toLowerCase()}/1`}
                >
                  {tag.charAt(0).toUpperCase() + tag.slice(1)}
                </a>
              ))
          }
        </div>
      </div>

      <div>
        <p class="font-bold text-foreground">Related Articles</p>
        <div class="mt-3 flex flex-col space-y-2">
          {
            relatedArticles
              .sort(() => Math.random() - 0.5)
              .slice(0, 4)
              .map((post: BlogPost) => {
                return (
                  <a
                    href={`/blog/${post.slug}`}
                    class="line-clamp-2 cursor-pointer  text-para hover:text-primary hover:no-underline"
                  >
                    {post.data.title}
                  </a>
                );
              })
          }
        </div>
      </div>

      <div>
        <p class="font-bold leading-none text-foreground">Share this blog</p>

        <div class="mt-5 flex space-x-4 text-para">
          <a
            href={`https://twitter.com/intent/tweet?text=${post.data.title}&url=https://akash.network/blog/${post.slug}`}
            target="_blank"
            rel="noopener noreferrer"
          >
            <TwitterIcon />
          </a>
          <a
            href={`https://www.facebook.com/sharer/sharer.php?u=https://akash.network/blog/${post.slug}`}
            target="_blank"
            rel="noopener noreferrer"
          >
            <Facebook className="h-5 w-5" />
          </a>
          <a
            href={`https://www.linkedin.com/shareArticle?mini=true&url=https://akash.network/blog/${post.slug}&title=${post.data.title}&summary=${post.data.description}&source=`}
            target="_blank"
            rel="noopener noreferrer"
          >
            <Linkedin className="h-5 w-5" />
          </a>
        </div>
      </div>
    </aside>
  </div>

  <div class="container block md:hidden">
    <div class="flex items-center justify-between pt-10 md:hidden">
      <p class="text-center text-base font-bold text-foreground">
        Share this Blog
      </p>
      <!-- Social Media Links  -->
      <div class="mt-4 flex items-center justify-center space-x-2.5">
        <a
          href={`https://twitter.com/intent/tweet?text=${post.data.title}&url=https://akash.network/blog/${post.slug}`}
          target="_blank"
          rel="noopener noreferrer"
        >
          <TwitterIcon />
        </a>
        <a
          href={`https://www.facebook.com/sharer/sharer.php?u=https://akash.network/blog/${post.slug}`}
          target="_blank"
          rel="noopener noreferrer"
        >
          <Facebook className="h-5 w-5" />
        </a>
        <a
          href={`https://www.linkedin.com/shareArticle?mini=true&url=https://akash.network/blog/${post.slug}&title=${post.data.title}&summary=${post.data.description}&source=`}
          target="_blank"
          rel="noopener noreferrer"
        >
          <Linkedin className="h-5 w-5" />
        </a>
      </div>
    </div>
    <div class="mt-10 space-y-10 md:hidden">
      <div>
        <p class="text-xs font-bold text-foreground">Explore Topics</p>
        <div class="mt-3 flex flex-wrap gap-x-2 gap-y-2">
          {
            tags
              .sort(() => Math.random() - 0.5)
              .map((tag: string) => (
                <a
                  class="inline-flex items-center rounded-full bg-badgeColor  px-3 py-1.5 text-xs font-medium text-iconText"
                  href={`/blog/${tag.toLowerCase()}/1`}
                >
                  {tag.charAt(0).toUpperCase() + tag.slice(1)}
                </a>
              ))
          }
        </div>
      </div>
    </div>

    <!-- Related Articles Section -->
    <div class="mb-10 mt-10 space-y-10 md:mb-0 md:hidden">
      <div>
        <p class="text-xs font-bold text-foreground">Related Articles</p>
        <div class="mt-3 flex flex-col space-y-2">
          {
            relatedArticles
              .sort(() => Math.random() - 0.5)
              .slice(0, 4)
              .map((post: BlogPost) => {
                return (
                  <a
                    href={`/blog/${post.slug}`}
                    class="line-clamp-2 cursor-pointer  text-xs text-para hover:text-primary hover:no-underline"
                  >
                    {post.data.title}
                  </a>
                );
              })
          }
        </div>
      </div>
    </div>

    <div class="hidden items-center justify-between py-10 md:flex">
      <p class="text-center text-base font-bold text-foreground">
        Share this Blog
      </p>
      <!-- Social Media Links  -->
      <div class="mt-4 flex items-center justify-center space-x-2.5">
        <a
          href={`https://twitter.com/intent/tweet?text=${post.data.title}&url=https://akash.network/blog/${post.slug}`}
          target="_blank"
          rel="noopener noreferrer"
        >
          <TwitterIcon />
        </a>
        <a
          href={`https://www.facebook.com/sharer/sharer.php?u=https://akash.network/blog/${post.slug}`}
          target="_blank"
          rel="noopener noreferrer"
        >
          <Facebook className="h-5 w-5" />
        </a>
        <a
          href={`https://www.linkedin.com/shareArticle?mini=true&url=https://akash.network/blog/${post.slug}&title=${post.data.title}&summary=${post.data.description}&source=`}
          target="_blank"
          rel="noopener noreferrer"
        >
          <Linkedin className="h-5 w-5" />
        </a>
      </div>
    </div>
  </div>

  <CalloutsClasses />
</BlogLayout>
