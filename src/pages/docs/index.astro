---
import DocsLayout from "@/layouts/docs-layout.astro";
import { Image } from "astro:assets";
import { getCollection, getEntryBySlug } from "astro:content";
import Card from "@/components/docs/homepage-cat-cards.astro";
import MobileTableOfContents from "@/components/community-pages/mobile-table-of-contents";
import generateToc from "@/lib/generateToc";
import MobileNav from "@/components/docs/mobile-sidebar";
import { generateDocsNav } from "@/lib/docs/generate-nav/docs-nav";
import Search from "@/components/docs/search-dialog.tsx";
import NextPrevNav from "@/components/docs/next-prev-nav.astro";
import { findPrevAndNextPages } from "@/lib/docs/findPrevAndNextPages";

const docsHomePagePage = await getEntryBySlug("Docs_Homepage", "index");

const { pageTitle, pageLogo, description, essentials, deployments, providers } =
  docsHomePagePage.data;

const pathname = new URL(Astro.request.url).pathname;

const catName = pathname
  .split("/")
  [pathname.split("/").length - 2].split("-")
  .map((word: any) => word.charAt(0).toUpperCase() + word.slice(1))
  .join(" ");

const pages = await getCollection("Docs");
console.log(pages);

const nav = generateDocsNav(pages);

console.log(nav[0].link);
---

<DocsLayout title="Docs">
  <div
    class="sticky top-0 z-10 -mt-4 mb-10 h-[130px] bg-[#FBF8F7] pt-4 md:hidden"
  >
    <div>
      <Search client:load currentPath={pathname} />
    </div>

    <div class="my-4 border-b"></div>

    <div class="">
      <div class="flex items-center gap-x-3">
        <MobileNav
          client:load
          catName={"Akash Documentation"}
          docsNav={nav}
          pathname={pathname}
        />
      </div>
    </div>
  </div>
  <div class="flex flex-col items-start">
    <Image
      src={pageLogo}
      alt={`HeroImage`}
      width={100}
      height={1000}
      format="svg"
      class="h-[39px] w-[39px] md:h-[78px] md:w-[78px]"
      loading="eager"
    />
    <h1 class="mt-6 text-[28px] font-bold md:mt-10 md:text-3lg">
      {pageTitle}
    </h1>
    <p class="mt-6 text-base md:text-lg">{description}</p>
  </div>

  <div class="mt-10 space-y-10">
    <div>
      <h3 class="text-xl font-bold md:text-2lg">{essentials.catTitle}</h3>
      <div class="mt-5 grid grid-cols-1 gap-5 lg:grid-cols-2">
        {
          essentials.cards.map((card) => (
            <Card
              title={card.title}
              description={card.description}
              icon={card.icon}
            />
          ))
        }
      </div>
    </div>

    <div>
      <h3 class="text-xl font-bold md:text-2lg">{deployments.catTitle}</h3>
      <div class="mt-5 grid grid-cols-1 gap-5 lg:grid-cols-2">
        {
          deployments.cards.map((card) => (
            <Card
              title={card.title}
              description={card.description}
              icon={card.icon}
            />
          ))
        }
      </div>
    </div>

    <div>
      <h3 class="text-xl font-bold md:text-2lg">{providers.catTitle}</h3>
      <div class="mt-5 grid grid-cols-1 gap-5 lg:grid-cols-2">
        {
          providers.cards.map((card) => (
            <Card
              title={card.title}
              description={card.description}
              icon={card.icon}
            />
          ))
        }
      </div>
    </div>

    <div class="md:hidden">
      <NextPrevNav nav={findPrevAndNextPages(nav, pathname)} />
    </div>
  </div>
</DocsLayout>
