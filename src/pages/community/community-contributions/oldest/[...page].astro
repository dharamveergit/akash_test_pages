---
import Layout from "@/layouts/layout.astro";
import { SortActions } from "../../../../components/network-pages/sort-actions";
import ProjectCard from "@/components/ecosystem-pages/project-card.astro";
import type { PaginateFunction } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import Pagination from "@/components/pagination.astro";
import { Image } from "astro:assets";
import ChevronRight from "@/assets/chevron-right.svg";
import Tag from "@/components/ui/tag.astro";
import PostCard from "@/components/cards/post-card.astro";
import NextPrevNav from "@/components/about-pages/next-prev-nav.astro";
import { nav } from "@/components/community-pages/nav-config.ts";
import FormattedDate from "@/components/formatted-date.astro";
import SearchDialog from "@/components/community-pages/search-dialog";
import SortDropDown from "@/components/community-pages/sort-dropdown";
import TagsSortDropDown from "@/components/community-pages/tags-sort-dropdown";
import { proseClasses } from "@/lib/prose-classes";

type Project = CollectionEntry<"Community_Contributions_Page">;

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const projects = (await getCollection("Community_Contributions_Page")).sort(
    (a, b) => {
      const dateA = new Date(a.data.pubDate);
      const dateB = new Date(b.data.pubDate);

      return dateA.getTime() - dateB.getTime();
    },
  );

  const tags: string[] = [];

  projects.forEach((project) => {
    // Loop through the tags in each blog post
    project.data.tags.forEach((tag) => {
      // Capitalize the first letter of the tag
      const lowerCasedTag = tag.toLowerCase();
      // Check if the tag is not already in the allTags array
      if (!tags.includes(lowerCasedTag)) {
        // Add the tag to the allTags array
        tags.push(lowerCasedTag);
      }
    });
  });

  return paginate(projects, {
    props: { tags: tags },
    pageSize: 9,
  });
}

// All paginated data is passed on the "page" prop
const { page, tags } = Astro.props;
const astroUrl = Astro.url;

function findPrevAndNextPages(nav: any, pathname: any) {
  // Find the index of the current page in the nav array
  const currentIndex = nav.findIndex((item: any) => item.link === pathname);

  // Calculate the index of the previous and next pages
  const prevIndex = currentIndex - 1;
  const nextIndex = currentIndex + 1;

  // Determine the previous and next pages
  const prevPage = prevIndex >= 0 ? nav[prevIndex] : null;
  const nextPage = nextIndex < nav.length ? nav[nextIndex] : null;

  return { prevPage, nextPage };
}

const pathname = new URL(Astro.request.url).pathname;

const communityPage = await Astro.glob(
  "../../../../content/Community_Page/_community-contributions/*.mdx",
);

const PageContent = communityPage[0].Content;
const pageFrontMatter = communityPage[0].frontmatter;
---

<Layout title="Community Contributions">
  <div class="container mt-10">
    <div class="grid grid-cols-12 gap-x-5">
      <div
        class="sticky top-[120px] hidden h-screen md:col-span-4 md:block lg:col-span-3"
      >
        <div class="flex flex-col gap-y-3">
          {
            nav.map((navItem) => (
              <a
                class={`${
                  pathname.split("/")[2] === navItem.link.split("/")[2]
                    ? "bg-[#F4F1F1] text-primary"
                    : "text-para"
                }  rounded-lg px-4 py-[6px] text-base font-bold leading-[24px] hover:bg-[#F4F1F1] hover:text-primary`}
                href={navItem.link}
              >
                {navItem.label}
              </a>
            ))
          }
        </div>

        <div class="mt-3">
          <div class="rounded-[8px] border border-[#E6E8EB] bg-white p-4">
            <div
              class="flex items-center justify-center rounded-[8px] bg-[#FFDEDE] py-[6px]"
            >
              <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="h-6 w-6"
              >
                <path
                  d="M2.5 7.5V15.5C2.5 16.6046 3.39543 17.5 4.5 17.5H15.5C16.6046 17.5 17.5 16.6046 17.5 15.5V7.5"
                  stroke="#FA5757"></path>
                <path
                  d="M16.9839 2.5H13.7422L14.1589 6.66667C14.1589 6.66667 14.9922 7.5 16.2422 7.5C17.1037 7.5 17.7013 7.10419 17.9895 6.85814C18.1224 6.74474 18.1701 6.56758 18.1414 6.39528L17.5757 3.00136C17.5275 2.71205 17.2772 2.5 16.9839 2.5Z"
                  stroke="#FA5757"></path>
                <path
                  d="M13.7422 2.5L14.1589 6.66667C14.1589 6.66667 13.3255 7.5 12.0755 7.5C10.8255 7.5 9.99219 6.66667 9.99219 6.66667V2.5H13.7422Z"
                  stroke="#FA5757"></path>
                <path
                  d="M9.99479 2.5V6.66667C9.99479 6.66667 9.16146 7.5 7.91146 7.5C6.66146 7.5 5.82812 6.66667 5.82812 6.66667L6.24479 2.5H9.99479Z"
                  stroke="#FA5757"></path>
                <path
                  d="M6.24132 2.5H2.9996C2.70629 2.5 2.45598 2.71205 2.40776 3.00136L1.84211 6.39528C1.81339 6.56758 1.86111 6.74474 1.99396 6.85814C2.28222 7.10419 2.87982 7.5 3.7413 7.5C4.9913 7.5 5.82465 6.66667 5.82465 6.66667L6.24132 2.5Z"
                  stroke="#FA5757"></path>
              </svg>
            </div>

            <h4
              class="mt-3 flex items-center gap-x-2 font-bold text-foreground"
            >
              Akash Swag Shop <svg
                width="14"
                height="14"
                viewBox="0 0 14 14"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M4.08594 9.91536L9.91927 4.08203"
                  stroke="#11181C"
                  stroke-width="1.5"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
                <path
                  d="M4.08594 4.08203H9.91927V9.91536"
                  stroke="#11181C"
                  stroke-width="1.5"
                  stroke-linecap="round"
                  stroke-linejoin="round"></path>
              </svg>
            </h4>

            <p class="mt-3 text-xs">
              Fill out a quick 30 second form to apply to become a partner
            </p>
          </div>
        </div>

        <div
          class="mt-3 flex flex-col justify-center rounded-[8px] border border-[#E6E8EB] bg-white p-4"
        >
          <a
            onclick="window.open('https://github.com/HoomanHQ/Akash_Network/blob/main/src/content/Community_Page/_community-contributions/index.mdx')"
            href="https://github.com/HoomanHQ/Akash_Network/tree/main/src/content/Community_Contributions_Page"
            class="inline-flex cursor-pointer items-center justify-center gap-x-2 text-xs font-medium hover:text-primary"
          >
            <svg
              width="16"
              height="16"
              viewBox="0 0 16 16"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M2 14L8 14L14 14"
                stroke="#11181C"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
              <path
                d="M8.15049 3.88559L10.0361 1.99997L13.3359 5.2998L11.4503 7.18542M8.15049 3.88559L4.51039 7.52569C4.32285 7.71323 4.21749 7.96758 4.21749 8.2328L4.21749 11.1184L7.10311 11.1184C7.36833 11.1184 7.62268 11.0131 7.81022 10.8255L11.4503 7.18542M8.15049 3.88559L11.4503 7.18542"
                stroke="#11181C"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
             Edit page on github</a
          >

          <p class="mt-2 text-center text-2xs">
            Last modified on April 18, 2023
          </p>
        </div>
      </div>

      <div
        class={`col-span-12 mx-auto w-full md:pl-10   md:px-5 md:col-span-8 lg:col-span-9 `}
      >
        <div class="flex items-center justify-between gap-x-3 md:hidden">
          <p class="text-xs leading-[18px] text-primary"></p>
        </div>

        <div>
          <div class="mt-10 md:mt-0">
            <h1
              id="overview"
              class="text-2lg font-bold leading-[48px] md:text-[48px] md:leading-[62.4px]"
            >
              {pageFrontMatter.title}
            </h1>
          </div>

          <div class="md:-mt-10">
            <article class={proseClasses}>
              <PageContent />
            </article>
          </div>

          <div
            class="not-prose mt-[72px] flex flex-col justify-between gap-x-6 lg:flex-row lg:border-b lg:pb-[20px]"
          >
            <div class="mb-5 flex items-center gap-x-4 md:mb-0">
              <a
                class={`cursor-pointer rounded-[6px] border border-gray-300 bg-white px-[17px] py-[8px] text-xs font-normal leading-normal  shadow-sm hover:border-primary hover:text-primary md:text-base ${
                  astroUrl.pathname.split("/")[3] === "latest" || "oldest"
                    ? "text-primary border-primary"
                    : "border-gray-300 text-[#889096]"
                }`}
              >
                All
              </a>

              {
                tags.map((tag: string) => (
                  <a
                    class="cursor-pointer rounded-[6px] border  border-gray-300 bg-white px-[17px] py-[8px]  text-xs  font-normal leading-normal text-[#889096] shadow-sm hover:border-primary hover:text-primary md:text-base"
                    href={`/community/community-contributions/${tag.toLowerCase()}/latest/1`}
                  >
                    {tag.charAt(0).toUpperCase() + tag.slice(1)}
                  </a>
                ))
              }
            </div>

            <div class="mb-5 border-b md:mb-6 md:mt-6 lg:hidden"></div>

            <div class="flex items-center justify-between">
              <SearchDialog client:load currentPath={astroUrl.pathname} />

              <div class="lg:hidden">
                {
                  astroUrl.pathname.split("/")[3] === "latest" ||
                  astroUrl.pathname.split("/")[3] === "oldest" ? (
                    <SortDropDown client:load currentPath={astroUrl.pathname} />
                  ) : (
                    <TagsSortDropDown
                      client:load
                      currentPath={astroUrl.pathname}
                    />
                  )
                }
              </div>
            </div>
          </div>
        </div>

        <div>
          <div class="mt-5 flex items-center justify-between">
            <h3 class="hidden text-[24px] font-bold lg:block">
              Smart Contracts
            </h3>

            <div class="hidden lg:block">
              {
                astroUrl.pathname.split("/")[3] === "latest" ||
                astroUrl.pathname.split("/")[3] === "oldest" ? (
                  <SortDropDown client:load currentPath={astroUrl.pathname} />
                ) : (
                  <TagsSortDropDown
                    client:load
                    currentPath={astroUrl.pathname}
                  />
                )
              }
            </div>
          </div>

          <div
            class="mt-[42px] grid grid-cols-1 gap-y-8 md:grid-cols-3 md:gap-x-6"
          >
            {
              page.data.map((contribution: Project, i: number) => {
                return (
                  <div class="rounded-[8px] border border-[#E6E8EB] bg-white p-5">
                    <div>
                      <Image
                        class="w-full rounded-[4px] object-cover"
                        alt="Feature illustration"
                        width={1200}
                        height={1200}
                        src={contribution.data.image}
                        format="webp"
                      />
                    </div>

                    <div class="mt-4">
                      <div class="flex items-center justify-between">
                        <p class="text-xs font-medium leading-[15px]">
                          by {contribution.data.author}
                        </p>
                        <p class="flex rounded-full bg-[#E6E8EB] px-2 py-1 text-[12px] font-normal text-[#7E868C]">
                          {contribution.data.tags[0]}
                        </p>{" "}
                      </div>
                      <h4 class="mt-1 text-base font-bold leading-normal text-foreground">
                        {contribution.data.title}
                      </h4>

                      <p class="mt-6 line-clamp-4 text-xs font-medium leading-[18px] text-cardGray ">
                        {contribution.data.description}{" "}
                      </p>

                      <p class="mt-6 text-2xs font-normal text-cardGray">
                        <FormattedDate date={contribution.data.pubDate} />{" "}
                      </p>
                    </div>
                  </div>
                );
              })
            }
          </div>

          <Pagination page={page} />
        </div>
        <div class="md:hidden">
          <NextPrevNav nav={findPrevAndNextPages(nav, pathname)} />
        </div>
      </div>
    </div>
  </div>
</Layout>
